// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// predict
int predict(Rcpp::CharacterVector infile0, Rcpp::CharacterVector outfile0, Rcpp::CharacterVector libfile0, Rcpp::CharacterVector outfile_expr0, int locus_model, double up_bound, int match_mode, int write_flag);
RcppExport SEXP _scBIRD_predict(SEXP infile0SEXP, SEXP outfile0SEXP, SEXP libfile0SEXP, SEXP outfile_expr0SEXP, SEXP locus_modelSEXP, SEXP up_boundSEXP, SEXP match_modeSEXP, SEXP write_flagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type infile0(infile0SEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type outfile0(outfile0SEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type libfile0(libfile0SEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type outfile_expr0(outfile_expr0SEXP);
    Rcpp::traits::input_parameter< int >::type locus_model(locus_modelSEXP);
    Rcpp::traits::input_parameter< double >::type up_bound(up_boundSEXP);
    Rcpp::traits::input_parameter< int >::type match_mode(match_modeSEXP);
    Rcpp::traits::input_parameter< int >::type write_flag(write_flagSEXP);
    rcpp_result_gen = Rcpp::wrap(predict(infile0, outfile0, libfile0, outfile_expr0, locus_model, up_bound, match_mode, write_flag));
    return rcpp_result_gen;
END_RCPP
}
